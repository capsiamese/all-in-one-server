// Code generated by entc, DO NOT EDIT.

package tab

const (
	// Label holds the string label denoting the tab type in the database.
	Label = "tab"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldSeq holds the string denoting the seq field in the database.
	FieldSeq = "seq"
	// FieldFavicon holds the string denoting the favicon field in the database.
	FieldFavicon = "favicon"
	// FieldUID holds the string denoting the uid field in the database.
	FieldUID = "uid"
	// EdgeGroup holds the string denoting the group edge name in mutations.
	EdgeGroup = "group"
	// Table holds the table name of the tab in the database.
	Table = "tabs"
	// GroupTable is the table that holds the group relation/edge.
	GroupTable = "tabs"
	// GroupInverseTable is the table name for the Group entity.
	// It exists in this package in order to avoid circular dependency with the "group" package.
	GroupInverseTable = "groups"
	// GroupColumn is the table column denoting the group relation/edge.
	GroupColumn = "group_tabs"
)

// Columns holds all SQL columns for tab fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldURL,
	FieldSeq,
	FieldFavicon,
	FieldUID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "tabs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"group_tabs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
